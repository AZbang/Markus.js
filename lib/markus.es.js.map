{"version":3,"file":"markus.es.js","sources":["../src/Parser.js","../src/mixins/Element.js","../src/elements/App.js","../src/elements/Resources.js","../src/elements/Mixins.js","../src/elements/Store.js","../src/elements/Scenes.js","../src/mixins/Display.js","../src/elements/Sprite.js","../src/elements/Button.js","../src/elements/Block.js","../src/elements/Text.js","../src/propPlugins.js","../src/utils.js","../src/main.js","../src/View.js"],"sourcesContent":["/**\r\n * Marklang Parser\r\n * @example\r\n * const parser = new markus.Parser();\r\n * await parser.parseMarkfile('mark.view');\r\n * > [{type=\"elementNode\", element: 'app', props: {...}, presets: [...]}]\r\n * @class\r\n * @memberof markus\r\n * @param [loadType=ajax] {string} Method of loading markfile\r\n */\r\nexport default class Parser {\r\n  constructor(loadType='ajax') {\r\n    /**\r\n     * Method of loading markfile.\r\n     * @member {string}\r\n     */\r\n    this.loadType = loadType;\r\n  }\r\n\r\n  /**\r\n   * Parse markfile to AST presets\r\n   * @param filepath {string} file path to markfile\r\n   * @returns {Promise} Return promise with ast presets\r\n   *\r\n   * @example\r\n   * await parser.parseMarkfile(['./mark.view');\r\n   * > [{type=\"elementNode\", element: 'app', props: {...}, presets: [...]}]\r\n   */\r\n  parseMarkfile(filepath) {\r\n    return new Promise((resolve) => {\r\n      this.imports([filepath]).then((data) => {\r\n        let entry = data[0].data;\r\n        let imports = this.getImports(entry);\r\n\r\n        this.imports(imports).then((files) => {\r\n          for(let i = 0; i < files.length; i++) {\r\n            if(this.getImports(files[i].data).length) {\r\n              throw Error('Imports are possible only in the entry file.');\r\n            }\r\n            entry = entry.replace('import ' + files[i].path, files[i].data);\r\n          }\r\n\r\n          let presets = this.parsePresets(entry.split('\\n'));\r\n          resolve(this.generateTree(presets));\r\n        });\r\n      });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Loaded markfiles from array pathes\r\n   * @param pathes {string[]} Patches to markfiles\r\n   * @returns {Promise}\r\n   *\r\n   * @example\r\n   * await parser.imports(['./mark.view', './resources.mark']);\r\n   * > [{name: 'mark.view', path: './mark.view', data: '...'}, {...}]\r\n   */\r\n  imports(pathes) {\r\n    let files = [];\r\n    for(let i = 0; i < pathes.length; i++) {\r\n      if(this.loadType === 'ajax') {\r\n        files.push(fetch(pathes[i])\r\n          .then((res) => {\r\n            if(res.status === 404) {\r\n              throw Error('Markus module \"' + pathes[i] + '\" is not found');\r\n            }\r\n            return res.text();\r\n          }).then((data) => {\r\n            return {name: pathes[i].split('/').slice(-1)[0], path: pathes[i], data};\r\n          })\r\n        );\r\n      }\r\n    }\r\n    return Promise.all(files);\r\n  }\r\n\r\n  /**\r\n   * Generates AST from presets based on type and depth properties of a preset.\r\n   * @param presets {Preset[]} List presets\r\n   * @returns {Array} AST presets\r\n   *\r\n   * @example\r\n   * parser.generateTree([\r\n   *   {type: 'elementNode', depth: 0, element: 'app'},\r\n   *   {type: 'elementNode', depth: 1, element: 'text'},\r\n   *   {type: 'propNode', depth: 2, name: 'text', value=''}\r\n   *   {type: 'valueNode', depth: 3, value='TEXT NODE'}\r\n   * ])\r\n   *\r\n   * > {type: 'elementNode', depth: 0, element: 'app', presets: [{\r\n   *     type: 'elementNode', depth: 1, element: 'text', props: {\r\n   *       text: 'TEXT NODE'\r\n   *     }}\r\n   *   }]\r\n   * }\r\n   */\r\n  generateTree(presets) {\r\n    let tree = [];\r\n    for(let i = presets.length-1; i >= 0; i--) {\r\n      if(presets[i].depth !== 0) {\r\n        for(let j = i-1; j >= 0; j--) {\r\n          if(presets[j].depth < presets[i].depth) {\r\n            let parent = presets[j];\r\n            let child = presets[i];\r\n\r\n            if(child.type === 'valueNode') {\r\n              if(parent.type === 'elementNode') {\r\n                parent.value = child.value + (parent.value ? '\\n' + parent.value : '');\r\n              }\r\n              else if(parent.type === 'propNode') {\r\n                if(parent.value === true) {\r\n                  parent.value = '';\r\n                }\r\n                parent.value = child.value + (parent.value ? '\\n' + parent.value : '');\r\n              }\r\n              else {\r\n                throw Error('valueNode cannot be a child of a ' + parent.type);\r\n              }\r\n            }\r\n            else if(child.type === 'propNode') {\r\n              if(parent.type === 'propNode') {\r\n                if(typeof parent.value === 'string') {\r\n                  parent.directory = parent.value;\r\n                  parent.value = {[parent.value]: {[child.name]: child.value}};\r\n                }\r\n                else if(parent.directory) {\r\n                  Object.assign(parent.value[parent.directory], {[child.name]: child.value});\r\n                }\r\n                else if(typeof parent.value === 'object' && parent.value != null) {\r\n                  Object.assign(parent.value, {[child.name]: child.value});\r\n                }\r\n                else {\r\n                  parent.value = {value: parent.value, [child.name]: child.value};\r\n                }\r\n              }\r\n              else if(parent.type === 'elementNode') {\r\n                if(Array.isArray(parent.props[child.name])) {\r\n                  parent.props[child.name].push(child.value);\r\n                }\r\n                else if(typeof parent.props[child.name] === 'object') {\r\n                  Object.assign(parent.props[child.name], child.value);\r\n                }\r\n                else if(parent.props[child.name]) {\r\n                  parent.props[child.name] = [parent.props[child.name], child.value];\r\n                }\r\n                else {\r\n                  parent.props[child.name] = child.value;\r\n                }\r\n              }\r\n              else {\r\n                throw Error('propNode cannot be a child of a ' + parent.type);\r\n              }\r\n            }\r\n            else if(child.type === 'elementNode') {\r\n              if(parent.type === 'elementNode') {\r\n                parent.presets.unshift(child);\r\n              }\r\n              else {\r\n                throw Error('elementNode cannot be a child of a ' + parent.type);\r\n              }\r\n            }\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        tree.push(presets[i]);\r\n      }\r\n    }\r\n    return tree;\r\n  }\r\n\r\n  /**\r\n   * Parse marklang lines array to presets. Calls parser.parsePreset (line [i])\r\n   * @param lines {string[]} Strings with marklang markup\r\n   * @returns {Preset[]}\r\n  */\r\n  parsePresets(lines) {\r\n    let presets = [];\r\n    for(let i = 0; i < lines.length; i++) {\r\n      let preset = this.parsePreset(lines[i]);\r\n      if(preset != null) {\r\n        presets.push(preset);\r\n      }\r\n    }\r\n    return presets;\r\n  }\r\n\r\n  /**\r\n   * Parse marklang string to preset\r\n   * @param line {string} String with marklang markup\r\n   * @returns {Preset}\r\n   *\r\n   * @example\r\n   * parser.parsePreset('    text.tag#id(obj.visible = yes) | VALUE')\r\n   * > {\r\n   *   type: 'elementNode',\r\n   *   depth: 2\r\n   *   element: 'text',\r\n   *   id: 'id',\r\n   *   tags: ['tag'],\r\n   *   props: {obj: {visible: true}},\r\n   *   value: 'VALUE'\r\n   * }\r\n   *\r\n   * parser.parsePreset('    | VALUE TEXT')\r\n   * > {\r\n   *   depth: 2,\r\n   *   type: 'valueNode',\r\n   *   value: 'VALUE TEXT'\r\n   * }\r\n   *\r\n   * parser.parsePreset('  @prop .3324')\r\n   * > {\r\n   *   depth: 1,\r\n   *   type: 'propNode',\r\n   *   typeAttr: 'prop',\r\n   *   name: 'prop',\r\n   *   value: 0.3324\r\n   * }\r\n   *\r\n   * parser.parsePreset('  @move(10, 30)')\r\n   * > {\r\n   *   depth: 1,\r\n   *   type: 'propNode',\r\n   *   typeAttr: 'method',\r\n   *   name: 'move',\r\n   *   args: [10, 30]\r\n   * }\r\n   */\r\n  parsePreset(line) {\r\n    line = this.removeComment(line);\r\n\r\n    let type = 'elementNode';\r\n    let depth = this.getDepth(line);\r\n\r\n    // if line is attr node\r\n    let attr = this.getAttr(line);\r\n    if(attr) {\r\n      return {type: 'propNode', depth, name: attr[1], value: attr[2], typeAttr: attr[0]};\r\n    }\r\n\r\n    // else line is element, empty or value node\r\n    let element = this.getElement(line);\r\n    let tags = this.getTags(line);\r\n    let value = this.getValue(line);\r\n    let id = this.getId(line);\r\n    let props = [];\r\n\r\n    // if element is undefined, then line is block or value node\r\n    if(element == null) {\r\n      if(tags.length || id) {\r\n        element = '';\r\n      }\r\n      else if(value) {\r\n        type = 'valueNode';\r\n      }\r\n      else {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // if line is elementNode, then parse props\r\n    if(type !== 'valueNode') {\r\n      props = this.getInlineAttrs(line);\r\n    }\r\n\r\n    return {type, element, value, props, tags, id, depth, presets: []};\r\n  }\r\n\r\n\r\n  /**\r\n   * Convert value from props with support js types\r\n   * @param value {string}\r\n   * @return {any} Parsed value\r\n   *\r\n   * @example\r\n   * parser.parseValue('no'|'off'|'false');\r\n   * > false\r\n   * parser.parseValue('yes'|'on'|'true');\r\n   * > true\r\n   * parser.parseValue('.5'|'+34'|'-34'|'3.32432');\r\n   * > Number\r\n   * parser.parseValue('anystring');\r\n   * > String\r\n   */\r\n  parseValue(value) {\r\n    if(value === 'on' || value === 'yes' || value === 'true') {\r\n      return true;\r\n    }\r\n    else if(value === 'off' || value === 'no' || value === 'false') {\r\n      return false;\r\n    }\r\n    else if(/^[-\\.\\+]?[0-9]+\\.?([0-9]+)?$/.test(value)) {\r\n      return Number(value);\r\n    }\r\n    return value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Removes comment from markline\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string} markline without comment\r\n   *\r\n   * @example\r\n   * removeComment('elm.tag // some comment')\r\n   * > 'elm.tag'\r\n   */\r\n  removeComment(line) {\r\n    return line.replace(/\\/\\/.+/, '');\r\n  }\r\n\r\n  /**\r\n   * Finds all import requests in the file from the `import path` construction\r\n   * @param data {string[]} lines array with marklang markup\r\n   * @returns {string[]} imports data\r\n   *\r\n   * @example\r\n   * parser.getImports([\r\n   *   'import resources.mark',\r\n   *   'app(w=1920, h=900)',\r\n   *   ' import scenes.mark'\r\n   * ].join('\\n'));\r\n   * > ['resources.mark', 'styles.mark']\r\n   */\r\n  getImports(data) {\r\n    return (data.match(/import .+/g) || []).map((v) => v.split(' ')[1]);\r\n  }\r\n\r\n  /**\r\n   * Getes comment from markline\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string} Comment from markline\r\n   *\r\n   * @example\r\n   * getComment('elm.tag // some comment')\r\n   * > // some comment\r\n   */\r\n  getComment(line) {\r\n    return (line.match(/\\/\\/.+/)  || [''])[0];\r\n  }\r\n\r\n  /**\r\n   * Finds the depth of the entry element. Calculated by the number of tabs at the beginning of the line.\r\n   * @param line {string} line with marklang markup\r\n   * @returns {number} depth\r\n   *\r\n   * @example\r\n   * parser.getDepth(\"\\t\\t\\t\\t\")\r\n   * > 4\r\n   */\r\n  getDepth(line) {\r\n    return (line.match(/^[\\t ]+/) || [''])[0].length/2;\r\n  }\r\n\r\n  /**\r\n   * Parse query selector to object\r\n   * @param query {string} Query selector in marklang markup\r\n   * @returns {Object} Query selector in object\r\n   *\r\n   * @example\r\n   * parser.parseQuery('element.tag.tag2#id');\r\n   * > {element: 'element', tags: ['tag', 'tag2'], id: 'id'}\r\n   */\r\n  parseQuery(query) {\r\n    let tags = (query.match(/\\.\\w+/g) || []).map((tag) => tag.slice(1));\r\n    let id = (query.match(/\\#\\w+/) || [''])[0].slice(1);\r\n    let element = (query.match(/^\\w+/) || [])[0];\r\n    return {element, id, tags};\r\n  }\r\n\r\n  /**\r\n   * Get element name\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string} element name from markline\r\n   *\r\n   * @example\r\n   * parser.getElement(\"sprite.tag#id(prop=data)\")\r\n   * > \"sprite\"\r\n   */\r\n  getElement(line) {\r\n    return (line.match(/^[\\t ]*(\\w+)/) || [])[1];\r\n  }\r\n\r\n  /**\r\n   * Extracts all element tags from .tag_name construction\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string[]} element tags from markline\r\n   *\r\n   * @example\r\n   * parser.getTags(\"el.tag1#id.tag2.tag3\")\r\n   * > [\"tag1\", \"tag2\", \"tag3\"]\r\n   */\r\n  getTags(line) {\r\n    return (line.replace(/\\(.+\\)/, '').match(/\\.\\w+/g) || []).map((tag) => tag.slice(1));\r\n  }\r\n\r\n  /**\r\n   * Extracts the element id from the `#id_name` construction\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string} element id from markline\r\n   *\r\n   * @example\r\n   * parser.getId(\"el.tag1#cat.tag2.tag3\")\r\n   * > \"cat\"\r\n   */\r\n  getId(line) {\r\n    return (line.replace(/\\(.+\\)/, '').match(/#\\w+/) || [''])[0].slice(1);\r\n  }\r\n\r\n  /**\r\n   * Extract text value from the `| .+` construction\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string} element value from markline\r\n   *\r\n   * @example\r\n   * parser.getValue(\"| SOME VALUE \");\r\n   * > \"SOME VALUE \"\r\n   */\r\n  getValue(line) {\r\n    return (line.match(/\\| *(.+)/) || [])[1] || '';\r\n  }\r\n\r\n  /**\r\n   * Retrieves an element property from a `@prop value` and `$prop value` structure\r\n   * @param line {string} line with marklang markup\r\n   * @returns {string[]} attr from markline. [attrType, attrNane, attrValue]\r\n   *\r\n   * @example\r\n   * parser.getAttr(\"@prop on\")\r\n   * > ['propNode', \"prop\", true]\r\n   *\r\n   * parser.getAttr(\"@func(on, 20, text)\")\r\n   * > ['propNode', \"attr\", [true, 20, 'text']]\r\n   */\r\n  getAttr(line) {\r\n    let func = line.match(/^[\\t ]*\\@(\\w+)\\((.+)?\\)/);\r\n    if(func) {\r\n      let args = func[2] != null ? func[2].split(/,\\s+/).map(v => this.parseValue(v)) : [];\r\n      return ['method', func[1], function() {\r\n        this[func[1]].apply(this, args);\r\n      }];\r\n    }\r\n\r\n    let prop = line.match(/^[\\t ]*\\@(\\w+)(\\s(.+))?/);\r\n    if(prop) {\r\n      return ['prop', prop[1], prop[3] != null ? this.parseValue(prop[3]) : true];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Retrieves all element properties from the structure (prop = data, ...)\r\n   * @param line {string} line with marklang markup\r\n   * @returns {Object} element attrs from markline\r\n   *\r\n   * @example\r\n   * parser.getInlineAttrs(\"el(texture=cat.png, font= Bebas Neue, visible = off, some.point.x = .4)\")\r\n   * > {texture: \"cat.png\", font=\"Bebas Neue\", visible: false, some: {point: {x: .4}}}\r\n   */\r\n  getInlineAttrs(line) {\r\n    let res = {};\r\n    let find = line.match(/\\((.+)\\)/g);\r\n    if(find == null) {\r\n      return {};\r\n    }\r\n\r\n    let props = find[0].split(/,\\s+/);\r\n    for(let key in props) {\r\n      let prop = props[key].replace('(', '').replace(')', '').split('=');\r\n      let keys = prop[0].split('.');\r\n      let _prop = res;\r\n      for(let i = 0; i < keys.length; i++) {\r\n        if(keys[i+1]) {\r\n          _prop = _prop[keys[i]] = {};\r\n        }\r\n        else {\r\n          _prop[keys[i]] = prop[1] != null ? this.parseValue(prop[1]) : true;\r\n        }\r\n      }\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","// import {propPlugins} from '../main.js';\r\n\r\n/**\r\n * Mixin for additional functionality for all markus elements\r\n * @class Element\r\n * @param superclass {Class} Parent class\r\n * @memberof markus.mixins\r\n *\r\n * @example\r\n * let containerWithElementMix = new markus.mixins.Display(PIXI.Container);\r\n * containerWithElementMix({view, parent, ...preset}, argForParentClass);\r\n */\r\nexport default function Element(superclass=class{}) {\r\n  return class extends superclass {\r\n    constructor(preset, arg) {\r\n      super(arg);\r\n\r\n      /**\r\n       * Root view class\r\n       * @memberof markus.mixins.Element\r\n       * @member {markus.View}\r\n       */\r\n      this.mark = preset.view;\r\n\r\n      /**\r\n       * Element name\r\n       * @readonly\r\n       * @memberof markus.mixins.Element\r\n       * @member {string}\r\n       */\r\n      this.element = preset.element;\r\n\r\n      /**\r\n       * Presets list\r\n       * @memberof markus.mixins.Element\r\n       * @member {markus.View}\r\n       */\r\n      this.presets = preset.presets;\r\n\r\n      /**\r\n       * Element id\r\n       * @readonly\r\n       * @memberof markus.mixins.Element\r\n       * @member {string}\r\n       */\r\n      this.id = preset.id;\r\n\r\n      /**\r\n       * Element tags\r\n       * @memberof markus.mixins.Element\r\n       * @member {string[]}\r\n       */\r\n      this.tags = preset.tags.slice(0);\r\n\r\n      /**\r\n       * Parent node\r\n       * @memberof markus.mixins.Element\r\n       * @member {Element}\r\n       */\r\n      this.parentElement = preset.parent || preset.view;\r\n\r\n      /**\r\n       * Childs list\r\n       * @memberof markus.mixins.Element\r\n       * @member {Element[]}\r\n       */\r\n      this.childList = [];\r\n\r\n      /**\r\n       * Аrray of functions called every tick\r\n       * @memberof markus.mixins.Element\r\n       * @member {function[]}\r\n       */\r\n      this.ticks = [];\r\n\r\n      /**\r\n       * Element properties from markus markup\r\n       * @readonly\r\n       * @memberof markus.mixins.Element\r\n       * @member {function[]}\r\n       */\r\n      this.props = preset.props;\r\n\r\n      this._bindToParentNode();\r\n    }\r\n\r\n    _bindToParentNode() {\r\n      this.parentElement.childList.push(this);\r\n      if(this instanceof PIXI.DisplayObject) {\r\n        if(this.parentElement instanceof PIXI.DisplayObject) {\r\n          this.parentElement.addChild(this);\r\n        }\r\n        else {\r\n          this.parentElement.stage.addChild(this);\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Add tag to tags list and app mixin props\r\n     * @memberof markus.mixins.Element\r\n     * @param props {string} tagName\r\n     */\r\n    addTag(tag) {\r\n      if(this.tags.indexOf(tag) === -1) {\r\n        this.tags.push(tag);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Remove tag from tags list and reuse mixins props\r\n     * @memberof markus.mixins.Element\r\n     * @param props {string} tagName\r\n     */\r\n    removeTag(tag) {\r\n      let index = this.tags.indexOf(tag);\r\n      if(index !== -1) {\r\n        this.tags.splice(index, 1);\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Set props to element\r\n     * @memberof markus.mixins.Element\r\n     * @param props {Object} Props object\r\n     */\r\n    setProps(props) {\r\n      for(let key in props) {\r\n        // call custom prop plugins\r\n        // for(let plug in propPlugins) {\r\n        //   if(propPlugins[plug](this, key, props)) {\r\n        //     continue propsEach;\r\n        //   }\r\n        // }\r\n        //\r\n        //\r\n\r\n        if(typeof props[key] === 'function') {\r\n          props[key].call(this);\r\n        }\r\n\r\n        // parse events prop\r\n        else if(key === 'on' && typeof props[key] === 'object') {\r\n          for(let event in props[key]) {\r\n            this.on(event, () => {\r\n              this.setProps(props[key][event]);\r\n            });\r\n          }\r\n        }\r\n\r\n        else if(Array.isArray(this[key])) {\r\n          this[key] = this[key].concat(props[key]);\r\n        }\r\n\r\n        else if(typeof this[key] === 'object' && this[key] != null && this[key].set) {\r\n          if(typeof props[key] === 'object') {\r\n            this[key].x = props[key].x;\r\n            this[key].y = props[key].y;\r\n          }\r\n          else {\r\n            this[key].set(props[key]);\r\n          }\r\n        }\r\n\r\n        else if(typeof this[key] === 'object' && this[key] != null && typeof props[key] === 'object') {\r\n          Object.assign(this[key], props[key]);\r\n        }\r\n\r\n        else {\r\n          this[key] = props[key];\r\n        }\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Add function to ticks array\r\n     * @memberof markus.mixins.Element\r\n     * @param cb {funciton} Every tick is called\r\n     */\r\n    addTick(cb) {\r\n      this.ticks.push(cb);\r\n    }\r\n\r\n    /**\r\n     * Main tick method. Each tick is called in view.updateElements\r\n     * @memberof markus.mixins.Element\r\n     * @private\r\n     */\r\n    tick(dt) {\r\n      for(let i = 0; i < this.ticks.length; i++) {\r\n        this.ticks[i](dt);\r\n      }\r\n    }\r\n  };\r\n}\r\n","import Element from '../mixins/Element';\r\n\r\n/**\r\n * Main class for the entire visible tree of elements.\r\n * @example\r\n * app\r\n *  &#64;w 1280\r\n *  &#64;h 720\r\n *  &#64;color 0xFFFFFF\r\n *  &#64;smooth off\r\n *\r\n * // activate children presets\r\n * mark.get('app').init();\r\n *\r\n * @class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.elements\r\n * @augments PIXI.Application\r\n */\r\nexport default class App extends Element(PIXI.Application) {\r\n  constructor(preset) {\r\n    super(preset, {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      sharedTicker: false,\r\n      sharedLoader: false\r\n    });\r\n\r\n    /**\r\n     * Resolution coef\r\n     * @member {number}\r\n     */\r\n    this.resolution = null;\r\n\r\n    this.width = 1920;\r\n    this.height = 1080;\r\n\r\n    document.body.appendChild(this.view);\r\n    document.body.style = 'padding: 0; margin: 0; overflow: hidden; background: #000;';\r\n    window.addEventListener('resize', () => this._resize(this));\r\n  }\r\n\r\n  /**\r\n   * Renderer backgroundColor\r\n   * @member {number}\r\n   */\r\n  set color(v) {\r\n    this.renderer.backgroundColor = +v;\r\n  }\r\n  get color() {\r\n    return this.renderer.backgroundColor;\r\n  }\r\n\r\n  /**\r\n   * Smooth textures in pixi\r\n   * @member {bolleon}\r\n   */\r\n  get smooth() {\r\n    return PIXI.settings.SCALE_MODE !== PIXI.SCALE_MODES.NEAREST;\r\n  }\r\n  set smooth(v) {\r\n    PIXI.settings.SCALE_MODE = v ? PIXI.SCALE_MODES.LINEAR : PIXI.SCALE_MODES.NEAREST;\r\n  }\r\n\r\n  /**\r\n   * Width game view\r\n   * @member {number}\r\n   */\r\n  set width(v) {\r\n    this._width = v;\r\n    this._resize();\r\n  }\r\n  get width() {\r\n    return this._width;\r\n  }\r\n\r\n  /**\r\n   * Height game view\r\n   * @member {number}\r\n   */\r\n  set height(v) {\r\n    this._height = v;\r\n    this._resize();\r\n  }\r\n  get height() {\r\n    return this._height;\r\n  }\r\n\r\n  _resize() {\r\n    this.resolution = window.innerWidth/this.width;\r\n    this.renderer.resize(window.innerWidth, this.height*this.resolution);\r\n    this.view.style.marginTop = window.innerHeight/2-this.height*this.resolution/2 + 'px';\r\n    this.stage.scale.set(this.resolution);\r\n  }\r\n\r\n  /**\r\n   * Initial app elements\r\n   */\r\n  init() {\r\n    this.mark.add(this.presets, this);\r\n  }\r\n}\r\n","import Element from '../mixins/Element';\r\n\r\n/**\r\n * Implementing resource-loader for markusJS. Item properties are a resource for loading.\r\n * @example\r\n * resources\r\n *   &#64;level level.json\r\n *   &#64;sprites sprites.json\r\n *   &#64;bg bg.png\r\n *\r\n * mark.get('resources').load(() => {\r\n *   mark.get('app').init();\r\n * });\r\n *\r\n * @class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.elements\r\n * @augments PIXI.loaders.Loader\r\n */\r\nexport default class Resources extends Element(PIXI.loaders.Loader) {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    for(let key in this.props) {\r\n      this.add(key, this.props[key]);\r\n    }\r\n    this.props = {};\r\n  }\r\n}\r\n","import Element from '../mixins/Element';\r\n\r\n/**\r\n * Class store all mixin properties of elements\r\n * @example\r\n * mixins\r\n *  .label\r\n *    &#64;size 120\r\n *\r\n *  sprite.quad\r\n *    &#64;width 100\r\n *    &#64;height 100\r\n *\r\n * @class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.elements\r\n */\r\nexport default class Mixins extends Element() {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    /**\r\n     * Mixins array.\r\n     * @member {Object[]}\r\n     */\r\n    this.mixins = this.presets;\r\n  }\r\n\r\n  /**\r\n   * Merging mixin with elements props\r\n   * @prop elm {Element} Element for merge\r\n   * @prop [props={}] {Object} Element props\r\n   * @returns {Object} merged elm props with mixin props\r\n   */\r\n  merge(elm, props={}) {\r\n    let parseProps = {};\r\n    for(let i = 0; i < this.mixins.length; i++) {\r\n      if(this.mark.isSelectorOfElement(this.mixins[i], elm)) {\r\n        for(let key in this.mixins[i].props) {\r\n          if(Array.isArray(props[key])) {\r\n            parseProps[key] = props[key].concat(this.mixins[i].props[key]);\r\n          }\r\n          else {\r\n            parseProps[key] = this.mixins[i].props[key];\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return Object.assign({}, props, parseProps);\r\n  }\r\n\r\n  /**\r\n   * Set mixin to store\r\n   * @prop selector {string} Mixin selector\r\n   * @prop props {Object} Mixin props\r\n   */\r\n  set(selector, props) {\r\n    this.mixins[selector] = props;\r\n  }\r\n}\r\n","import Element from '../mixins/Element';\r\n\r\n/**\r\n * Implementing localStorage for MarkusJS. Properties of this element are saved in localStorage\r\n * @example\r\n * store\r\n *   &#64;level 1\r\n *   &#64;lang ru\r\n *   &#64;hero Atlant\r\n *\r\n * @class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.elements\r\n */\r\nexport default class Store extends Element() {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    for(let key in this.props) {\r\n      this.set(key, this.props[key]);\r\n    }\r\n    this.props = {};\r\n  }\r\n\r\n  /**\r\n   * Get item to localStorage\r\n   * @prop name {string} item name\r\n   * @prop val {any} item value\r\n   */\r\n  set(name, val) {\r\n    localStorage.setItem(name, JSON.stringify(val));\r\n  }\r\n\r\n  /**\r\n   * Get item from localStorage\r\n   * @prop name {string} Item name\r\n   * @returns {any} Item value from localStorage\r\n   */\r\n  get(name) {\r\n    return JSON.parse(localStorage.getItem(name));\r\n  }\r\n}\r\n","import Element from '../mixins/Element';\r\n\r\n/**\r\n * Scenes Manager for MarkusJS. Children of this element are separate scenes that can be switched.\r\n * @example\r\n * scenes(scene = A)\r\n *   block(id=A)\r\n *     text | SCENE A\r\n *   block(id=B)\r\n *     text | SCENE B\r\n *\r\n * mark.get('scenes').scene = 'B';\r\n *\r\n * @class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.elements\r\n * @augments PIXI.Container\r\n */\r\nexport default class Scenes extends Element(PIXI.Container) {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    /**\r\n     * Scenes presets\r\n     * @member {Preset[]}\r\n     */\r\n    this.scenes = this.presets;\r\n  }\r\n\r\n  /**\r\n   * Editable prop. Current scene id\r\n   * @member {string}\r\n   */\r\n  set scene(id) {\r\n    for(let i = 0; i < this.scenes.length; i++) {\r\n      if(this.scenes[i].id === id) {\r\n        this._scene && this.mark.remove(this._scene, this);\r\n        this._scene = this.mark.add(this.scenes[i], this);\r\n      }\r\n    }\r\n  }\r\n  get scene() {\r\n    return this._scene;\r\n  }\r\n}\r\n","import Element from './Element';\r\n\r\n/**\r\n * Mixin for additional functionality for all pixi elements\r\n *\r\n * @class\r\n * @name Display\r\n * @param superclass {Class} Parent class\r\n * @mixes markus.mixins.Element\r\n * @memberof markus.mixins\r\n *\r\n * @example\r\n * let containerWithDisplayAndElementMix = new markus.mixins.Display(PIXI.Container);\r\n * containerWithDisplayAndElementMix({view, parent, ...preset}, argForParentClass);\r\n */\r\nexport default function Display(superclass) {\r\n  return class extends Element(superclass) {\r\n    constructor(preset, arg) {\r\n      super(preset, arg);\r\n\r\n      this.app = this.mark.get('app');\r\n\r\n      /**\r\n       * The width of the area of allowable positions children of the element\r\n       * @member {number}\r\n       * @memberof markus.mixins.Display\r\n       */\r\n      this.contentW = this.app.width;\r\n\r\n      /**\r\n       * The height of the area of allowable positions children of the element\r\n       * @member {number}\r\n       * @memberof markus.mixins.Display\r\n       */\r\n      this.contentH = this.app.height;\r\n\r\n      this.addTick(() => this._computedPosition());\r\n    }\r\n\r\n    /**\r\n     * Angle in degrees\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set angle(v) {\r\n      this.rotation = v*PIXI.DEG_TO_RAD;\r\n    }\r\n    get angle() {\r\n      return this.rotation*PIXI.RAD_TO_DEG;\r\n    }\r\n\r\n\r\n    /**\r\n     * Short setter for width\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set w(v) {\r\n      this.width = v;\r\n    }\r\n\r\n    /**\r\n     * Short setter for height\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set h(v) {\r\n      this.height = v;\r\n    }\r\n\r\n    /**\r\n     * Positioning the element relative to the left edge of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set left(v) {\r\n      this._right = null;\r\n      this._centerX = null;\r\n      this._left = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get left() {\r\n      return this._left;\r\n    }\r\n\r\n    /**\r\n     * Positioning the element relative to the right edge of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set right(v) {\r\n      this._left = null;\r\n      this._centerX = null;\r\n      this._right = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get right() {\r\n      return this._right;\r\n    }\r\n\r\n    /**\r\n     * Positioning the element relative to the horizontal center of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set centerX(v) {\r\n      this._left = null;\r\n      this._right = null;\r\n      this._centerX = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get centerX() {\r\n      return this._centerX;\r\n    }\r\n\r\n    /**\r\n     * Positioning the element relative to the horizontal and vertical center of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    get centerXY() {\r\n      return this._centerX === this._centerY ? this._centerX : null;\r\n    }\r\n    set centerXY(v) {\r\n      this.centerX = v;\r\n      this.centerY = v;\r\n    }\r\n\r\n\r\n    /**\r\n     * Positioning the element relative to the top edge of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {v}\r\n     */\r\n    set top(v) {\r\n      this._bottom = null;\r\n      this._centerY = null;\r\n      this._top = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get top() {\r\n      return this._top;\r\n    }\r\n\r\n\r\n    /**\r\n     * Positioning the element relative to the bottom edge of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set bottom(v) {\r\n      this._top = null;\r\n      this._centerY = null;\r\n      this._bottom = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get bottom() {\r\n      return this._bottom;\r\n    }\r\n\r\n    /**\r\n     * Positioning the element relative to the vertical center of the parent\r\n     * @memberof markus.mixins.Display\r\n     * @member {number}\r\n     */\r\n    set centerY(v) {\r\n      this._top = null;\r\n      this._bottom = null;\r\n      this._centerY = v === true ? 0 : v === false ? null : v;\r\n    }\r\n    get centerY() {\r\n      return this._centerY;\r\n    }\r\n\r\n    _computedPosition() {\r\n      let w = this.parentElement.contentW || this.app.width;\r\n      let h = this.parentElement.contentH || this.app.height;\r\n\r\n      if(this.left != null) {\r\n        this.x = this.left;\r\n      }\r\n      else if(this.centerX != null) {\r\n        this.x = w/2+this.centerX;\r\n      }\r\n      else if(this.right != null) {\r\n        this.x = w-this.right;\r\n      }\r\n\r\n      if(this.top != null) {\r\n        this.y = this.top;\r\n      }\r\n      else if(this.centerY != null) {\r\n        this.y = h/2+this.centerY;\r\n      }\r\n      else if(this.bottom != null) {\r\n        this.y = h-this.bottom;\r\n      }\r\n\r\n      if(this.parentElement.anchor) {\r\n        this.x = this.x-w*this.parentElement.anchor.x;\r\n        this.y = this.y-h*this.parentElement.anchor.y;\r\n      }\r\n    }\r\n  };\r\n}\r\n","import Display from '../mixins/Display';\r\n\r\n/**\r\n * Implementing PIXI.Sprite for markusJS\r\n * @example\r\n * sprite(src=image.png)\r\n *\r\n * @class\r\n * @mixes markus.mixins.Display\r\n * @memberof markus.elements\r\n * @augments PIXI.Sprite\r\n */\r\n\r\nexport default class Sprite extends Display(PIXI.Sprite) {\r\n  constructor(preset) {\r\n    super(preset, PIXI.Texture.WHITE);\r\n\r\n    this.contentW = this.width;\r\n    this.contentH = this.height;\r\n    this.mark.add(this.presets, this);\r\n  }\r\n\r\n  /**\r\n   * Sprite texture source\r\n   * @member {string}\r\n   */\r\n  get src() {\r\n    return this._src;\r\n  }\r\n  set src(v) {\r\n    if(v == null) {\r\n      return;\r\n    }\r\n\r\n    this._src = v;\r\n    this.texture = PIXI.Texture.fromImage(v);\r\n  }\r\n}\r\n","import Sprite from './Sprite';\r\n\r\n/**\r\n * Sprite with button behavior\r\n * @example\r\n * button(src=button.png)\r\n *  &#64;toScene=scene_id\r\n *    text | CLICK ME\r\n *\r\n * @class\r\n * @memberof markus.elements\r\n * @augments markus.elements.Sprite\r\n */\r\nexport default class Button extends Sprite {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    /**\r\n     * toggle scene in scenes manager then button call pointertap event\r\n     * @memberof {markus.elements.Button}\r\n     * @member {string}\r\n     */\r\n    this.toScene = null;\r\n\r\n    /**\r\n     * texture button in active state\r\n     * @memberof {markus.elements.Button}\r\n     * @member {string}\r\n     */\r\n    this.activeSrc = this.src;\r\n\r\n    /**\r\n     * texture button in inactive state\r\n     * @memberof {markus.elements.Button}\r\n     * @member {string}\r\n     */\r\n    this.inactiveSrc = this.src;\r\n\r\n    this.enable = true;\r\n    this.on('pointertap', () => {\r\n      if(this.toScene) {\r\n        this.mark.get('scenes').scene = this.toScene;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Toggle interactive state\r\n   * @memberof {markus.elements.Button}\r\n   * @member {booleon}\r\n   */\r\n  set enable(v) {\r\n    this.interactive = v;\r\n    this.buttonMode = v;\r\n    this.src = (v ? this.activeSrc  : this.inactiveSrc) || this.src;\r\n  }\r\n  get enable() {\r\n    return this.interactive;\r\n  }\r\n}\r\n","import Display from '../mixins/Display';\r\n\r\n/**\r\n * Container with additional logic positioning for children\r\n * @example\r\n * block\r\n *  &#64;inlineItems\r\n *  &#64;itemsMarginX 10\r\n *  &#64;itemsMarginX 10\r\n *  &#64;contentW 300\r\n *  &#64;contentH 300\r\n *  &#64;anchorX .5\r\n *  &#64;anchorY .5\r\n *    sprite(src=image.png)\r\n *    sprite(src=image.png)\r\n *    sprite(src=image.png)\r\n\r\n * @class\r\n * @mixes markus.mixins.Display\r\n * @memberof markus.elements\r\n * @augments PIXI.Container\r\n */\r\nexport default class Block extends Display(PIXI.Container) {\r\n  constructor(preset) {\r\n    super(preset);\r\n\r\n    /**\r\n     * Position items as a inline list.\r\n     * @memberof {markus.elements.Block}\r\n     * @member {booleon}\r\n     */\r\n    this.inlineItems = false;\r\n\r\n    /**\r\n     * Indent by x for elements in inline positioning\r\n     * @memberof {markus.elements.Block}\r\n     * @member {number}\r\n     */\r\n    this.itemsMarginX = 0;\r\n\r\n    /**\r\n     * Indent by y for elements in inline positioning\r\n     * @memberof {markus.elements.Block}\r\n     * @member {number}\r\n     */\r\n    this.itemsMarginY = 0;\r\n\r\n    /**\r\n     * anchor by x positioning the block relative to contentW\r\n     * @memberof {markus.elements.Block}\r\n     * @member {number}\r\n     */\r\n    this.anchorX = 0;\r\n\r\n    /**\r\n     * anchor by y positioning the block relative to contentW\r\n     * @memberof {markus.elements.Block}\r\n     * @member {number}\r\n     */\r\n    this.anchorY = 0;\r\n\r\n\r\n    this.mark.add(this.presets, this);\r\n    this.addTick(() => this._computedBlock());\r\n  }\r\n\r\n  _computedBlock() {\r\n    // computed position with anchor\r\n    this.x = this.x-this.contentW*this.anchorX;\r\n    this.y = this.y-this.contentH*this.anchorY;\r\n\r\n    if(!this.inlineItems) {\r\n      return;\r\n    }\r\n\r\n    // computed position for inline items\r\n    let x = 0, y = 0;\r\n    let maxh = 0;\r\n    for(let i = 0; i < this.children.length; i++) {\r\n      let el = this.children[i];\r\n      let anchorX = el.anchor ? el.anchor.x : el.anchorX;\r\n      let anchorY = el.anchor ? el.anchor.y : el.anchorY;\r\n\r\n      el.x = x+el.width*anchorX;\r\n      x += el.width+this.itemsMarginX;\r\n      maxh = Math.max(maxh, el.height);\r\n      if(x > this.contentW) {\r\n        el.x = el.width*anchorX;\r\n        x = el.width+this.itemsMarginX;\r\n        y += maxh+this.itemsMarginY;\r\n      }\r\n      el.y = y+el.height*anchorY;\r\n    }\r\n  }\r\n}\r\n","import Display from '../mixins/Display';\r\n\r\n/**\r\n * Implementing PIXI.Text for MarkusJS.\r\n * @example\r\n * text | SOME TEXT VALUE\r\n *   &#64;size 100\r\n *   &#64;font Bebas Neue\r\n *   &#64;color #fff\r\n *\r\n * @class\r\n * @mixes markus.mixins.Display\r\n * @memberof markus.elements\r\n * @augments PIXI.Text\r\n */\r\nexport default class Text extends Display(PIXI.Text) {\r\n  constructor(preset) {\r\n    super(preset, preset.value);\r\n  }\r\n\r\n  /**\r\n   * Size text\r\n   * @member {number}\r\n  */\r\n  get size() {\r\n    return this.style.fontSize;\r\n  }\r\n  set size(v) {\r\n    this.style.fontSize = v;\r\n  }\r\n\r\n  /**\r\n   * Fill color text\r\n   * @member {string}\r\n   */\r\n  get color() {\r\n    return this.style.fill;\r\n  }\r\n  set color(v) {\r\n    this.style.fill = v;\r\n  }\r\n\r\n  /**\r\n   * Font family\r\n   * @member {string}\r\n   */\r\n  get font() {\r\n    return this.style.fontFamily;\r\n  }\r\n  set font(v) {\r\n    this.style.fontFamily = v;\r\n  }\r\n}\r\n","/**\r\n  * Additional logic for the properties of the element. Plugins are called every time a property is passed to an element.\r\n  *\r\n  * @example\r\n  * function plugin(el, keyProp, allProps) {\r\n  *  if(allProps[keyProp] === 'somevalue') {\r\n  *    // do somethin\r\n  *    return true // if true, the property will no longer be processed by other plugins.\r\n  *  }\r\n  * }\r\n  * @namespace markus.propPlugins\r\n*/\r\n\r\n\r\n/**\r\n * Replaces appW to application width and appH to application height.\r\n * @memberof markus.propPlugins\r\n * @arg el {Element}\r\n * @arg key {string}\r\n * @arg props {Object}\r\n*/\r\nfunction fullsize(el, key, props) {\r\n  if(props[key] === 'appW') {\r\n    props[key] = el.mark.get('app').width;\r\n  }\r\n  else if(props[key] === 'appH') {\r\n    props[key] = el.mark.get('app').height;\r\n  }\r\n}\r\n\r\n/**\r\n * Print prop \"consolelog\" value to console. Return true\r\n * @memberof markus.propPlugins\r\n * @arg el {Element}\r\n * @arg key {string}\r\n * @arg props {Object}\r\n */\r\nfunction print(el, key, props) {\r\n  if(key === 'consolelog') {\r\n    window.console.log(props[key]);\r\n    return true;\r\n  }\r\n}\r\n\r\nexport {\r\n  fullsize, print\r\n};\r\n","/**\r\n * @namespace markus.utils\r\n */\r\n\r\n/**\r\n * Checks if a subset belongs to a set\r\n * @memberof markus.utils\r\n * @param {Array} set - Given set\r\n * @param {Array} subset - Given subset\r\n * @returns {booleon}\r\n * @example\r\n * // return false\r\n * isSubsetArray([1, 2, 3, 5], [1, 4])\r\n */\r\nfunction isSubsetArray(set, subset) {\r\n  for(let i = 0; i < subset.length; i++) {\r\n    let isInclude = false;\r\n    for(let j = 0; j < set.length; j++) {\r\n      if(set[j] === subset[i]) {\r\n        isInclude = true;\r\n        break;\r\n      }\r\n    }\r\n    if(!isInclude) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\nexport {isSubsetArray};\r\n","import * as elements from './elements/index';\r\nimport * as mixins from './mixins/index';\r\nimport * as propPlugins from './propPlugins';\r\nimport * as utils from './utils';\r\n\r\n/**\r\n * Add new elements\r\n * @static\r\n * @memberof markus\r\n * @param elms {Element[]} Your custom elements to be used in the markfile\r\n */\r\nfunction registerElements(elms) {\r\n  Object.assign(elements, elms);\r\n}\r\n\r\n/**\r\n * Add new prop plugins\r\n * @memberof markus\r\n * @static\r\n * @param plugs {Object[]} Your custom elements to be used in the markfile\r\n */\r\nfunction registerPropPlugins(plugs) {\r\n  Object.assign(propPlugins, plugs);\r\n}\r\n\r\nexport {\r\n  elements,\r\n  propPlugins,\r\n  mixins,\r\n  utils,\r\n  registerElements,\r\n  registerPropPlugins\r\n};\r\n","import Parser from './Parser';\r\nimport {elements} from './main';\r\nimport {isSubsetArray} from './utils';\r\n\r\n/**\r\n * The root element of the entire tree of objects. Responsible for loading the tree and manipulating the elements.\r\n * @example\r\n * const mark = new markus.View('view.mark', () => {\r\n *   mark.get('resources').load(() => {\r\n *     mark.get('app').start();\r\n *   });\r\n * }, [Player, Bottle, EnemyController]);\r\n * @class\r\n * @memberof markus\r\n * @param [filepath] {string} File path to main markfile\r\n * @param [onReady] {function} Called when the markfile is loaded and the rendering\r\n */\r\nexport default class View {\r\n  constructor(filepath, onReady) {\r\n    /**\r\n     * Root child list which contains all the root elements of the mark file\r\n     * @member {Element[]}\r\n     */\r\n    this.childList = [];\r\n\r\n    /**\r\n     * Marklang parser\r\n     * @member {markus.Parser}\r\n     */\r\n    this.parser = new Parser('ajax');\r\n    if(filepath) {\r\n      this.parser.parseMarkfile(filepath).then(tree => {\r\n        this.add(tree);\r\n        onReady && onReady(this);\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Main ticker for update all elements. Initially active.\r\n     * @member {PIXI.ticker.Ticker}\r\n     */\r\n    this.ticker = new PIXI.ticker.Ticker();\r\n    this.ticker.add(dt => this.updateElements(dt));\r\n    this.ticker.start();\r\n  }\r\n\r\n  /**\r\n   * Update all elements in root childList\r\n   * @private\r\n   * @param dt {number} Delta time\r\n   * @param [elms=view.childList] {Array} Array of element\r\n   */\r\n  updateElements(dt, elms=this.childList) {\r\n    for(let i = 0; i < elms.length; i++) {\r\n      elms[i].tick && elms[i].tick(dt);\r\n      this.updateElements(dt, elms[i].childList);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Add elements to parent node\r\n   * @param value {(string|string[]|Preset|Preset[])} Elements to be added can be either a string or an array of marklang markup strings, or a Preset or an array of Presets.\r\n   * @param [parent=view] {Element} Parent element\r\n   * @returns {(Element|Element[])} Returns added items\r\n   *\r\n   * @example\r\n   * mark.add('enemy.zombie(level=23)', enemyController);\r\n   * mark.add(['sprite.tag(prop=1)', 'text | SOME TEXT']);\r\n   * mark.add([presetEnemy, presetEnemy], enemyController);\r\n   * mark.add(presetEnemy, enemyController);\r\n   */\r\n  add(value, parent=this) {\r\n    if(!Array.isArray(value)) {\r\n      return this.addPreset(value, parent);\r\n    }\r\n\r\n    let res = [];\r\n    for(let i = 0; i < value.length; i++) {\r\n      let preset = value[i];\r\n      if(typeof preset === 'string') {\r\n        preset = this.parser.parsePreset(preset);\r\n      }\r\n      res.push(this.addPreset(preset, parent));\r\n    }\r\n    return res;\r\n  }\r\n\r\n\r\n  /**\r\n   * Add Preset to parent node\r\n   * @param preset {Preset} Preset object\r\n   * @param [parent=view] {Element} Parent element\r\n   * @returns {Element} Returns added element\r\n   */\r\n  addPreset(preset={}, parent=this) {\r\n    if(preset.type !== 'elementNode') {\r\n      throw Error('Preset cannot be activate. His type is not elementNode');\r\n    }\r\n\r\n    let elementName = preset.element.slice(0, 1).toUpperCase() + preset.element.slice(1);\r\n    let elmCtor = elements[elementName] || elements[preset.element];\r\n\r\n    if(!elmCtor) {\r\n      throw Error('Element \"' + preset.element + '\" is not defined');\r\n    }\r\n\r\n    // merge props with mixins\r\n    let props = preset.props;\r\n    if(this.get('mixins')) {\r\n      props = this.get('mixins').merge(preset, preset.props);\r\n    }\r\n\r\n    let elm = new elmCtor(Object.assign(preset, {parent: parent, view: this, props: props}));\r\n    elm.setProps(elm.props);\r\n    return elm;\r\n  }\r\n\r\n\r\n  /**\r\n   * Remove elements from parent node\r\n   * @param value {(string|string[]|Element|Element[])} Elements to be removed can be either a string or an array of marklang markup selectors strings, or a Element or an array of Elements.\r\n   * @param [parent=view] {Element} Parent element\r\n   * @returns {(Element|Element[])} Returns removed items\r\n   *\r\n   * @example\r\n   * mark.remove('enemy.zombie(level=23)', enemyController);\r\n   * mark.remove([Enemy, Enemy], enemyController);\r\n   * mark.remove(Enemy, enemyController);\r\n   */\r\n  remove(value, parent=this) {\r\n    if(!Array.isArray(value)) {\r\n      return this.removeElement(value, value.parentElement);\r\n    }\r\n\r\n    let res = [];\r\n    for(let i = 0; i < value.length; i++) {\r\n      let preset = value[i];\r\n      if(typeof preset === 'string') {\r\n        preset = this.get(preset, parent);\r\n      }\r\n      res.push(this.removeElement(preset, preset.parentElement));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Remove Element from parent node\r\n   * @param el {ELement} Element class\r\n   * @param [parent=view] {Element} Parent element\r\n   * @returns {Element} Returns removed element\r\n   */\r\n  removeElement(el, parent=this) {\r\n    let index = parent.childList.indexOf(el);\r\n    if(index !== -1) {\r\n      el.onRemove && el.onRemove();\r\n      parent.childList.splice(index, 1);\r\n      if(el instanceof PIXI.DisplayObject) {\r\n        if(parent instanceof PIXI.DisplayObject) {\r\n          parent.removeChild(el);\r\n        }\r\n        else {\r\n          parent.stage.removeChild(el);\r\n        }\r\n      }\r\n    }\r\n    return el;\r\n  }\r\n\r\n  /**\r\n   * Get element by selector\r\n   * @param selector {ELement} Element selector\r\n   * @param [parent=view] {Element} Parent element for search\r\n   * @returns {Element}\r\n   *\r\n   * @example\r\n   * mark.get('sprite.cat');\r\n   * > Sprite\r\n   *\r\n   * mark.get('sprite.cat.black');\r\n   * > null\r\n   */\r\n  get(selector, parent=this) {\r\n    let q = this.parser.parseQuery(selector);\r\n    return this.find(q, parent.childList);\r\n  }\r\n\r\n  /**\r\n   * Get elements by selector\r\n   * @param selector {ELement} Elements selector\r\n   * @param [parent=view] {Element} Parent element for search\r\n   * @returns {Element[]}\r\n   *\r\n   * @example\r\n   * mark.getAll('sprite.cat');\r\n   * > [Sprite, Sptite, Sprite]\r\n   *\r\n   * mark.getAll('#cat');\r\n   * > null\r\n   */\r\n  getAll(selector, parent=this) {\r\n    let q = this.parser.parseQuery(selector);\r\n    return this.find(q, parent.childList, true);\r\n  }\r\n\r\n  /**\r\n   * General method for searching items on request\r\n   * @param q {Object} Query object\r\n   * @param q.id {string} Query id\r\n   * @param q.element {string} Query element name\r\n   * @param q.tags {string[]} Query element tags\r\n   * @param elms {Element[]} List Elements\r\n   * @param [isAll=false] {booleon} Do I need to search for all elements by q\r\n   * @returns {(Element[]|Element)}\r\n   *\r\n   * @example\r\n   * mark.find({element: 'sprite', tags: ['cat'], mark.root, true});\r\n   * > [Sprite, Sptite, Sprite]\r\n   */\r\n  find(q, elms, isAll=false) {\r\n    let res = [];\r\n    for(let i = 0; i < elms.length; i++) {\r\n      if(this.isSelectorOfElement(q, elms[i])) {\r\n        if(isAll) {\r\n          res.push(elms[i]);\r\n        }\r\n        else {\r\n          return elms[i];\r\n        }\r\n      }\r\n\r\n      // If childList has children and the search is performed globally\r\n      if(elms[i].childList.length) {\r\n        let find = this.find(q, elms[i].childList, isAll);\r\n        if(!isAll && find) {\r\n          return find;\r\n        }\r\n        else {\r\n          res = res.concat(find);\r\n        }\r\n      }\r\n    }\r\n    return isAll ? res : null;\r\n  }\r\n\r\n  /**\r\n   * Checks if the request is suitable for the item\r\n   * @param q {Object} Query object\r\n   * @param q.id {string} Query id\r\n   * @param q.element {string} Query element name\r\n   * @param q.tags {string[]} Query element tags\r\n   * @param elm {Element} Checked Element\r\n   * @returns {booleon}\r\n   */\r\n  isSelectorOfElement(q, elm) {\r\n    let isEl = q.element ? q.element === elm.element : true;\r\n    let isId = q.id ? q.id === elm.id : true;\r\n    let isTags = isSubsetArray(elm.tags, q.tags);\r\n\r\n    return isEl && isId && isTags;\r\n  }\r\n}\r\n"],"names":["Parser","loadType","this","Element","superclass","preset","arg","super","mark","view","element","presets","id","tags","slice","parentElement","parent","childList","ticks","props","_bindToParentNode","push","PIXI","DisplayObject","addChild","stage","addTag","tag","indexOf","removeTag","let","index","splice","setProps","key","call","on","event","Array","isArray","concat","set","x","y","Object","assign","addTick","cb","tick","dt","i","length","parseMarkfile","filepath","Promise","resolve","this$1","imports","then","data","entry","getImports","files","Error","replace","path","parsePresets","split","generateTree","pathes","fetch","res","status","text","name","all","tree","depth","j","child","type","value","directory","unshift","lines","parsePreset","line","removeComment","getDepth","attr","getAttr","typeAttr","getElement","getTags","getValue","getId","getInlineAttrs","parseValue","test","Number","match","map","v","getComment","parseQuery","query","func","args","apply","prop","find","keys","_prop","App","width","window","innerWidth","height","innerHeight","sharedTicker","sharedLoader","resolution","document","body","appendChild","style","addEventListener","_resize","prototypeAccessors","color","renderer","backgroundColor","smooth","settings","SCALE_MODE","SCALE_MODES","NEAREST","LINEAR","_width","_height","resize","marginTop","scale","init","add","Application","Resources","loaders","Loader","Mixins","mixins","merge","elm","parseProps","isSelectorOfElement","selector","Store","val","localStorage","setItem","JSON","stringify","get","parse","getItem","Scenes","scenes","scene","_scene","remove","Container","Display","app","contentW","contentH","_computedPosition","angle","rotation","DEG_TO_RAD","RAD_TO_DEG","w","h","left","_right","_centerX","_left","right","centerX","centerXY","_centerY","centerY","top","_bottom","_top","bottom","anchor","Sprite","Texture","WHITE","src","_src","texture","fromImage","Button","toScene","activeSrc","inactiveSrc","enable","interactive","buttonMode","Block","inlineItems","itemsMarginX","itemsMarginY","anchorX","anchorY","_computedBlock","maxh","children","el","Math","max","Text","size","fontSize","fill","font","fontFamily","fullsize","print","console","log","isSubsetArray","subset","isInclude","registerElements","elms","elements","registerPropPlugins","plugs","propPlugins","View","onReady","parser","ticker","Ticker","updateElements","start","addPreset","elementName","toUpperCase","elmCtor","removeElement","onRemove","removeChild","q","getAll","isAll","isEl","isId","isTags"],"mappings":"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"}