{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/elements/App.js","webpack:///./src/elements/BasicElement.js","webpack:///./src/elements/Block.js","webpack:///./src/elements/DisplayElement.js","webpack:///./src/elements/Resources.js","webpack:///./src/elements/Sprite.js","webpack:///./src/elements/Styles.js","webpack:///./src/elements/Text.js","webpack:///./src/elements/index.js","webpack:///./src/index.js","webpack:///./src/parser/index.js","webpack:///./src/utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;ACVA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAyC;;AAE1B,kBAAkB,6DAAY;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA,sCAAsC,WAAW,kBAAkB,kBAAkB;;AAErF;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AAAA,yCAAyC;AACzC;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEe,2EAAY,EAAC;;;;;;;;;;;;;ACrB5B;AAAA;AAAA;AAA6C;;AAE9B,oBAAoB,+DAAc;AACjD;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAyC;;AAEzC,oDAAoD,6DAAY;AAChE;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;;AAEe,6EAAc,EAAC;;;;;;;;;;;;;AC3C9B;AAAA;AAAA;AAAyC;;AAE1B,wBAAwB,6DAAY;AACnD;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACVA;AAAA;AAAA;AAA6C;;AAE9B,qBAAqB,+DAAc;AAClD;AACA;;;AAGA;AACA;;;;;;;;;;;;;ACRA;AAAA;AAAA;AAAyC;;AAE1B,qBAAqB,6DAAY;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AAAA;AAAA;AAA6C;;AAE9B,mBAAmB,+DAAc;AAChD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuC;AACY;AACN;;AAEF;AACE;AACJ;;;;;;;;;;;;;ACNzC;AAAA;AAAA;AAAA;AAAA;AAAmC;AACS;AACP;;AAE9B;AACP,yBAAyB;AACzB,sBAAsB,+CAAY,EAAE,oBAAoB;AACxD,kCAAkC,sCAAc;AAChD;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,4DAAa;;AAE9B;AACA;AACA;;;;;;;;;;;;;AC/FA;AAAA;AAAA;AAAA;AACA;AACmC;;AAEpB;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,wBAAwB,kBAAkB;AAC1C;AACA;AACA;;AAEA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oBAAoB;AACpB,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC,QAAQ;AACzC;AACA,wBAAwB,QAAQ;AAChC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;;AAEA;AACA;AACA,6EAA6E;AAC7E,iDAAiD,oCAAoC;AACrF,eAAe;AACf,iDAAiD,oCAAoC;AACrF,eAAe;AACf;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,kBAAkB,kBAAkB;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,cAAc;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACrKA;AAAA;AAAO;AACP,gBAAgB,mBAAmB;AACnC;AACA,kBAAkB,gBAAgB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"markus.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import BasicElement from './BasicElement'\r\n\r\nexport default class App extends BasicElement(PIXI.Application) {\r\n  constructor(markus, root, data) {\r\n    super(markus, root, data, {\r\n      backgroundColor: data.props.color || 0x000000,\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n      sharedTicker: false,\r\n      sharedLoader: false\r\n    });\r\n\r\n    document.body.appendChild(this.view);\r\n    document.body.style = \"padding: 0; margin: 0; overflow: hidden; background: #000;\";\r\n\r\n    if(!data.props.smooth) PIXI.settings.SCALE_MODE = PIXI.SCALE_MODES.NEAREST;\r\n    this.width = data.props.w || 1280;\r\n    this.height = data.props.h || 720;\r\n    this.resolution = null;\r\n\r\n    this.childList = this.stage.children;\r\n\r\n    window.addEventListener('resize', () => this.resize(this));\r\n    this.resize();\r\n\r\n  }\r\n  startRender() {\r\n    this.markus.activatePresets(this, this.presets);\r\n  }\r\n  resize() {\r\n    this.resolution = window.innerWidth/this.width;\r\n    this.renderer.resize(window.innerWidth, this.height*this.resolution);\r\n    this.view.style.marginTop = window.innerHeight/2-this.height*this.resolution/2 + 'px';\r\n    this.stage.scale.set(this.resolution);\r\n  }\r\n}\r\n","const BasicElement = (superclass=class {}) => class extends superclass {\r\n  constructor(markus, parent, data, arg) {\r\n    console.log(superclass)\r\n\r\n    super(arg);\r\n\r\n    this.markus = markus;\r\n    this.element = data.element;\r\n    this.tags = data.tags;\r\n    this.id = data.id;\r\n    this.value = data.value;\r\n    this.presets = data.presets;\r\n\r\n    this.childList = []\r\n  }\r\n\r\n  add(child) {\r\n    this.childList.push(child);\r\n  }\r\n}\r\n\r\nexport default BasicElement;\r\n","import DisplayElement from './DisplayElement'\r\n\r\nexport default class Block extends DisplayElement(PIXI.Container) {\r\n  constructor(markus, parent, data) {\r\n    super(markus, parent, data);\r\n\r\n    this.inlineItems = data.props.inlineItems || false;\r\n  }\r\n}\r\n","import BasicElement from './BasicElement'\r\n\r\nconst DisplayElement = (pixiClass) => class extends BasicElement(pixiClass) {\r\n  constructor(markus, parent, data, arg) {\r\n    super(markus, parent, data, arg);\r\n\r\n    // Computed thisement Position\r\n    if(props.centerX != null) this.x = parent.width/2;\r\n    else if(props.left != null) this.x = props.left;\r\n    else if(props.right != null) this.x = parent.width-props.right;\r\n    else this.x = props.x || 0;\r\n\r\n    if(props.centerY != null) this.y = parent.height/2;\r\n    else if(props.top != null) this.y = props.top;\r\n    else if(props.bottom != null) this.y = parent.height-props.bottom;\r\n    else this.y = props.y || 0;\r\n\r\n    this.x += props.marginX || 0;\r\n    this.y += props.marginY || 0;\r\n\r\n    // Computed thisement transform\r\n    this.width = props.w || this.width;\r\n    this.height = props.h || this.height;\r\n    this.angle = props.angle || 0;\r\n\r\n    if(props.scale == null) {\r\n      if(props.scaleX != null) this.scale.x = props.scaleX;\r\n      if(props.scaleY != null) this.scale.y = props.scaleY;\r\n    } else this.scale.set(props.scale, props.scale);\r\n\r\n    if(props.anchor == null && this.anchor) {\r\n      this.anchor.x = props.anchorX || 0;\r\n      this.anchor.y = props.anchorY || 0;\r\n    } else this.anchor && this.anchor.set(props.anchor, props.anchor);\r\n\r\n    markus.activatePresets(this, data.presets);\r\n  }\r\n  set angle(deg) {\r\n    if(typeof deg != 'number') return;\r\n    this.rotation = deg*PIXI.DEG_TO_RAD;\r\n  }\r\n}\r\n\r\nexport default DisplayElement;\r\n","import BasicElement from './BasicElement'\r\n\r\nexport default class Resources extends BasicElement(PIXI.loaders.Loader) {\r\n  constructor(markus, root, data) {\r\n    super(markus, root, data);\r\n\r\n    for(let key in data.props) {\r\n      this.add(key, data.props[key]);\r\n    }\r\n  }\r\n}\r\n","import DisplayElement from './DisplayElement'\r\n\r\nexport default class Sprite extends DisplayElement(PIXI.Sprite) {\r\n  constructor(markus, parent, data) {\r\n    super(markus, parent, data, data.props.texture ? PIXI.Texture.fromImage(data.props.texture) : PIXI.Texture.WHITE);\r\n\r\n    \r\n  }\r\n}\r\n","import BasicElement from './BasicElement'\r\n\r\nexport default class Styles extends BasicElement() {\r\n  constructor(markus, root, data) {\r\n    super(markus, root, data)\r\n    this.styles = data.presets;\r\n  }\r\n  get(elm) {\r\n    let props = {};\r\n    for(let i = 0; i < this.styles.length; i++) {\r\n      if(this.markus.isSelectorOfElement(this.styles[i], elm))\r\n        Object.assign(props, this.styles[i].props);\r\n    }\r\n    return props;\r\n  }\r\n  set(selector, props) {\r\n    this.styles[selector] = props;\r\n  }\r\n}\r\n","import DisplayElement from './DisplayElement'\r\n\r\nexport default class Text extends DisplayElement(PIXI.Text) {\r\n  constructor(markus, parent, data) {\r\n    super(markus, parent, data, data.value);\r\n\r\n    this.style.fontSize = data.props.size;\r\n    this.style.fontFamily = data.props.font;\r\n    this.style.fontWeight = data.props.weight || 'normal';\r\n    this.style.fontStyle = data.props.style || 'normal';\r\n    this.style.fill = data.props.color || '#000';\r\n  }\r\n}\r\n","export { default as app } from './App';\r\nexport { default as resources } from './Resources';\r\nexport { default as styles } from './Styles';\r\n\r\nexport { default as block } from './Block';\r\nexport { default as sprite } from './Sprite';\r\nexport { default as text } from './Text';\r\n","import MarkusParser from './parser'\r\nimport * as markusElements from './elements'\r\nimport {isSubsetArray} from './utils'\r\n\r\nexport class Markus {\r\n  constructor(elements={}) {\r\n    this.parser = new MarkusParser({loadType: 'browser'});\r\n    this.elements = Object.assign(markusElements, elements);\r\n    this.presets = [];\r\n    this.childList = [];\r\n\r\n    this.ticker = new PIXI.ticker.Ticker();\r\n    this.ticker.add((dt) => this.updateElements(dt));\r\n  }\r\n\r\n  updateElements(dt, elms=this.childList) {\r\n    for(let i = 0; i < elms.length; i++) {\r\n      elms[i].update && elms[i].update(dt);\r\n      this.updateElements(dt, elms[i].childList);\r\n    }\r\n  }\r\n\r\n  add(filepath) {\r\n    return new Promise((resolve) => {\r\n      this.parser.parseMarkfile(filepath).then((tree) => {\r\n        this.presets = tree;\r\n        this.activatePresets(this, this.presets);\r\n        resolve(this);\r\n      })\r\n    })\r\n  }\r\n\r\n  createElement(parent, str) {\r\n    let preset = this.parser.parsePreset(str);\r\n    return this.activatePreset(parent, parent);\r\n  }\r\n\r\n  // presets\r\n  activatePreset(root, preset) {\r\n    if(preset.type !== 'elementNode') throw Error('Preset cannot be activate. His type is not elementNode');\r\n    if(!this.elements[preset.element]) throw Error('Element \"' + preset.element + '\" is not defined');\r\n\r\n    this.get('styles') && Object.assign(preset.props, this.get('styles').get(preset));\r\n    root.childList.push(new this.elements[preset.element](this, root, preset));\r\n  }\r\n\r\n  activatePresets(parent, presets) {\r\n    let res = [];\r\n    for(let key in presets) {\r\n      res.push(this.activatePreset(parent, presets[key]));\r\n    }\r\n    return res;\r\n  }\r\n\r\n  addRoot(elms) {\r\n    if(typeof elms === 'array') this.childList = this.childList.concat(elm);\r\n    else this.childList.push(elms);\r\n  }\r\n  removeRoot(elm) {\r\n    let i = this.childList.indexOf(elm);\r\n    if(i != -1) this.childList.splice(i, 1);\r\n  }\r\n\r\n  // find objects\r\n  get(selector) {\r\n    let q = this.parser.parseQuery(selector);\r\n    return this.find(q, this.childList);\r\n  }\r\n  getAll(selector) {\r\n    let q = this.parser.parseQuery(selector);\r\n    return this.find(q, this.childList, true);\r\n  }\r\n  find(q, elms=[], isAll=false) {\r\n    let res = [];\r\n    for(let i = 0; i < elms.length; i++) {\r\n      if(this.isSelectorOfElement(q, elms[i])) {\r\n        if(isAll) res.push(elms[i]);\r\n        else return elms[i];\r\n      }\r\n\r\n      if(elms[i].children || elms[i].stage) {\r\n        let find = this.find(q, elms[i].children || elms[i].stage.children, isAll);\r\n        if(!isAll && find) return find;\r\n        else res = res.concat(find);\r\n      }\r\n    }\r\n    return isAll ? res : null;\r\n  }\r\n  isSelectorOfElement(q, elm) {\r\n    let isEl = q.element ? q.element === elm.element : true;\r\n    let isId = q.id ? q.id === elm.id : true;\r\n    let isTags = isSubsetArray(elm.tags, q.tags);\r\n\r\n    return isEl && isId && isTags;\r\n  }\r\n}\r\n","// The first version of the parser based on RegExp. In the future, needs a faster solution.\r\n// 0.1.0v\r\nimport {parseValue} from '../utils'\r\n\r\nexport default class MarkusParser {\r\n  constructor(data) {\r\n    this.loadType = data.loadType || 'browser';\r\n  }\r\n  parseMarkfile(filepath) {\r\n    return new Promise((resolve) => {\r\n      this.imports([filepath]).then((data) => {\r\n        let entry = data[0].data;\r\n        let imports = this.getImports(entry);\r\n\r\n        this.imports(imports).then((files) => {\r\n          for(let i = 0; i < files.length; i++) {\r\n            if(this.getImports(files[i].data).length) throw Error('Imports are possible only in the entry file.')\r\n            entry = entry.replace('import ' + files[i].path, files[i].data);\r\n          }\r\n\r\n          let presets = this.parsePresets(entry.split('\\n'));\r\n          resolve(this.generateTree(presets));\r\n        })\r\n      })\r\n    })\r\n  }\r\n  imports(pathes) {\r\n    let files = [];\r\n    for(let i = 0; i < pathes.length; i++) {\r\n      if(this.loadType === 'browser') {\r\n        files.push(fetch(pathes[i])\r\n          .then((res) => {\r\n            if(res.status === 404) throw Error('Markus module \"' + pathes[i] + '\" is not found');\r\n            return res.text()\r\n          }).then((data) => {\r\n            return {name: pathes[i].split('/').slice(-1)[0], path: pathes[i], data}\r\n          })\r\n        )\r\n      }\r\n    }\r\n    return Promise.all(files);\r\n  }\r\n  generateTree(presets) {\r\n    let tree = [];\r\n    for(let i = presets.length-1; i >= 0; i--) {\r\n      if(presets[i].depth !== 0) {\r\n        for(let j = i-1; j >= 0; j--) {\r\n          if(presets[j].depth < presets[i].depth) {\r\n\r\n            if(presets[i].type === 'valueNode') {\r\n              if(presets[j].type === 'elementNode')\r\n                presets[j].value = presets[i].value + (presets[j].value ? '\\n' + presets[j].value : '');\r\n              else if(presets[j].type === 'propNode') {\r\n                if(presets[j].value === true) presets[j].value = '';\r\n                presets[j].value = presets[i].value + (presets[j].value ? '\\n' + presets[j].value : '');\r\n              } else throw Error('valueNode cannot be a child of a ' + presets[j].type);\r\n            }\r\n\r\n            if(presets[i].type === 'propNode') {\r\n              if(presets[j].type === 'propNode') {\r\n                if(typeof presets[j].value !== 'object') presets[j].value = {value: presets[j].value};\r\n                Object.assign(presets[j].value, {[presets[i].name]: presets[i].value})\r\n              } else if(presets[j].type === 'elementNode') {\r\n                Object.assign(presets[j].props, {[presets[i].name]: presets[i].value})\r\n              } else throw Error('propNode cannot be a child of a ' + presets[j].type);\r\n            }\r\n\r\n            else if(presets[i].type === 'elementNode') {\r\n              if(presets[j].type === 'elementNode') presets[j].presets.unshift(presets[i]);\r\n              else throw Error('elementNode cannot be a child of a ' + presets[j].type);\r\n            }\r\n\r\n            break;\r\n          }\r\n        }\r\n      } else tree.push(presets[i]);\r\n    }\r\n    return   tree;\r\n  }\r\n  parsePresets(lines) {\r\n    let presets = [];\r\n    for(let i = 0; i < lines.length; i++) {\r\n      let preset = this.parsePreset(lines[i]);\r\n      if(preset != null) presets.push(preset);\r\n    }\r\n    return presets;\r\n  }\r\n  parsePreset(line) {\r\n    let type = 'elementNode';\r\n    let depth = this.getDepth(line);\r\n\r\n    // if line is attr node\r\n    let attr = this.getAttr(line);\r\n    if(attr) {\r\n      type = 'propNode';\r\n      return {type, depth, name: attr[0], value: attr[1]}\r\n    }\r\n\r\n    // else line is element, empty or value node\r\n    let element = this.getElement(line);\r\n    let tags = this.getTags(line);\r\n    let value = this.getValue(line);\r\n    let id = this.getId(line);\r\n    let props = [];\r\n\r\n    // if element is undefined, then line is block or value node\r\n    if(element == null) {\r\n      if(tags.length || id) element = '';\r\n      else if(value) type = 'valueNode';\r\n      else return;\r\n    }\r\n\r\n    // if line is elementNode, then parse props\r\n    if(type !== 'valueNode') {\r\n      props = this.getProps(line);\r\n    }\r\n\r\n    return {type, element, value, props, tags, id, depth, presets: []};\r\n  }\r\n  parseValue(value) {\r\n    if(value === 'on' || value === 'yes' || value === 'true') return true;\r\n    else if(value === 'off' || value === 'no' || value === 'false') return false;\r\n    else if(/^[-\\.\\+]?[0-9]+\\.?([0-9]+)?$/.test(value)) return Number(value);\r\n    return value;\r\n  }\r\n  getImports(data) {\r\n    return (data.match(/import .+/g) || []).map((v) => v.split(' ')[1]);\r\n  }\r\n  getDepth(line) {\r\n    return (line.match(/^[\\t ]+/) || [''])[0].length/2;\r\n  }\r\n  parseQuery(query) {\r\n    let tags = (query.match(/\\.\\w+/g) || []).map((tag) => tag.slice(1));\r\n    let id = (query.match(/\\#\\w+/) || [''])[0].slice(1);\r\n    let element = (query.match(/^\\w+/) || [])[0];\r\n    return {element, id, tags}\r\n  }\r\n  getElement(line) {\r\n    return (line.match(/^[\\t ]*(\\w+)/) || [])[1];\r\n  }\r\n  getTags(line) {\r\n    return (line.replace(/\\(.+\\)/, '').match(/\\.\\w+/g) || []).map((tag) => tag.slice(1));\r\n  }\r\n  getId(line) {\r\n    return (line.replace(/\\(.+\\)/, '').match(/#\\w+/) || [''])[0].slice(1);\r\n  }\r\n  getValue(line) {\r\n    return (line.match(/\\| *(.+)/) || [])[1] || '';\r\n  }\r\n  getAttr(line) {\r\n    let prop = line.match(/^[\\t ]*@(\\w+)(\\s(.+))?/);\r\n    if(prop) return [prop[1], prop[3] != null ? this.parseValue(prop[3]) : true]\r\n  }\r\n  getProps(line) {\r\n    let res = {};\r\n    let find = line.match(/\\((.+)\\)/g);\r\n    if(find == null) return {};\r\n\r\n    let props = find[0].split(/,\\s+/);\r\n    for(let key in props) {\r\n      let prop = props[key].replace('(', '').replace(')', '').split('=');\r\n      res[prop[0]] = prop[1] != null ? this.parseValue(prop[1]) : true;\r\n    }\r\n    return res;\r\n  }\r\n}\r\n","export function isSubsetArray(set, subset) {\r\n  for(let i = 0; i < subset.length; i++) {\r\n    let isInclude = false;\r\n    for(let j = 0; j < set.length; j++) {\r\n      if(set[j] == subset[i]) {\r\n        isInclude = true;\r\n        break;\r\n      }\r\n    }\r\n    if(!isInclude) return false;\r\n  }\r\n  return true;\r\n}\r\n"],"sourceRoot":""}